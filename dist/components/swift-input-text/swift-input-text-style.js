"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SwiftInputTextStyled = void 0;

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _polished = require("polished");

var _templateObject;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var SwiftInputTextStyled = _styledComponents.default.div(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n\t\n\n\t", "\n"])), function (props) {
  return props.theme == "default" ? "\n\n\tdisplay: block;\n\twidth: 100%;\n\n\t.swift_input_text_input_element {\n\t\tposition: relative;\n\t\theight: 54px;\n\n\t\t.swift_input_text_input_icon {\n\t\t\tposition: absolute;\n\t\t\tleft: 0;\n\t\t\ttop: 0;\n\t\t\tbottom: 0;\n\t\t\tdisplay: flex;\n\t\t\talign-items: center;\n\t\t\tpadding: 0 16px;\n\t\t\tpointer-events: none;\n\t\t\tz-index: 2;\n\t\t\tsvg {\n\t\t\t\tdisplay: block;\n\t\t\t\twidth: 26px;\n\t\t\t\theight: 26px;\n\t\t\t}\n\t\t\t~ input {\n\t\t\t\tpadding-left: 50px;\n\t\t\t}\n\t\t}\n\t\tinput {\n\t\t\tposition: absolute;\n\t\t\ttop: 0;\n\t\t\tleft: 0;\n\t\t\tright: 0;\n\t\t\tbottom: 0;\n\t\t}\n\t}\n\tinput,\n\t.swift_input_text_input_search_selection_veneer {\n\t\tdisplay: block;\n\t\twidth: 100%;\n\t\toutline: none;\n\t\tborder: none;\n\t\tpadding: 10px 16px 11px;\n\t\tcolor: inherit;\n\t\tborder-radius: 4px;\n\t\toverflow: hidden;\n\t\tfont-size: 16px;\n\t\tline-height: 29px;\n\n\t\tborder: 2px solid #e6e6e6;\n\t\tbackground: #f2f2f2;\n\t\tcolor: #1e1e1e;\n\n\t\ttransition: all 0.12s ease-out;\n\t}\n\n\t.swift_input_text_label {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tlabel {\n\t\t\tflex: 1;\n\t\t}\n\n\t\t.swift_input_text_label_link {\n\t\t\ta {\n\t\t\t\tdisplay: flex;\n\t\t\t\talign-items: center;\n\t\t\t\tpadding: 4px;\n\t\t\t\tspan {\n\t\t\t\t\tdisplay: block;\n\t\t\t\t\tmargin-right: 4px;\n\t\t\t\t\tfont-size: 12px;\n\t\t\t\t\tfont-weight: 700;\n\t\t\t\t}\n\t\t\t\tsvg {\n\t\t\t\t\tdisplay: block;\n\t\t\t\t\twidth: 8px;\n\t\t\t\t\theight: 8px;\n\n\t\t\t\t\ttransition: transform 0.15s ease-out;\n\t\t\t\t}\n\t\t\t\t&:hover {\n\t\t\t\t\tsvg {\n\t\t\t\t\t\ttransform: translateX(4px);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t.swift_input_text_input {\n\t\tposition: relative;\n\t\t.swift_input_text_input_search_results {\n\t\t\tdisplay: none;\n\t\t\tposition: absolute;\n\t\t\ttop: 100%;\n\t\t\tleft: 0;\n\t\t\tright: 0;\n\t\t\tz-index: 5;\n\n\t\t\tcolor: #1e1e1e;\n\n\t\t\tborder: 2px solid #e6e6e6;\n\t\t\tbackground: #f2f2f2;\n\t\t\tcolor: #1e1e1e;\n\n\t\t\tmax-height: 320px;\n\t\t\toverflow-y: auto;\n\n\t\t\tul {\n\t\t\t\tli {\n\t\t\t\t\tpadding: 8px 16px;\n\t\t\t\t\tfont-size: 13px;\n\t\t\t\t\tfont-weight: 600;\n\t\t\t\t\tcursor: pointer;\n\t\t\t\t\t&:hover {\n\t\t\t\t\t\tbackground: ".concat((0, _polished.darken)(0.1, '#fff'), ";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t.swift_input_text_input_search_results_loading {\n\t\t\t\tpadding: 18px;\n\t\t\t\tdisplay: flex;\n\t\t\t\tjustify-content: stretch;\n\t\t\t\t> span {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t.swift_input_text_input_search_selection_veneer {\n\t\t\tposition: absolute;\n\t\t\ttop: 0;\n\t\t\tleft: 0;\n\t\t\tright: 0;\n\t\t\tbottom: 0;\n\t\t\tz-index: 2;\n\t\t\tpointer-events: none;\n\t\t\tdisplay: flex;\n\t\t\talign-items: center;\n\t\t}\n\n\t\t.swift_input_text_submit_button {\n\t\t\tposition: absolute;\n\t\t\ttop: 50%;\n\t\t\tright: 4px;\n\t\t\ttransform: translateY(-50%);\n\t\t\tz-index: 2;\n\t\t\t> a {\n\t\t\t\tpadding: 8px 16px;\n\t\t\t}\n\t\t}\n\t}\n\n\t&:hover input,\n\tinput:focus,\n\t&:hover input ~ .swift_input_text_input_search_selection_veneer {\n\t\tcolor: #1e1e1e;\n\n\t\tbackground: ").concat((0, _polished.darken)(0.1, '#fff'), ";\n\t\tcolor: #1e1e1e;\n\n\t\t").concat(props.searchResults || props.searchResultsLoading ? "\n\t\t\tborder-bottom-left-radius:0;\n\t\t\tborder-bottom-right-radius:0;\n\t\t\t~ .swift_input_text_input_search_results {\n\t\t\t\tdisplay:block;\n\t\t\t}\n\t\t" : "", "\n\t}\n\n\tinput:focus {\n\t\t~ .swift_input_text_input_search_selection_veneer {\n\t\t\tdisplay: none;\n\t\t}\n\t}\n\t").concat(props.error ? "\n\t\tinput {\n    \t\tbackground: #fde0e0;\n    \t\tborder-color: #d44747;\n    \t}\n\t" : "", "\n\n\n\t") : props.theme == "minimal" ? "\n\t\tdisplay: block;\n\twidth: 100%;\n\n\t.swift_input_text_input_element {\n\t\tposition: relative;\n\t\theight: 54px;\n\t\toverflow: hidden; /* shouldnt have to hide overflow, but with inline / minimal card with error background, red covers other fields/ button */\n\n\t\t.swift_input_text_input_icon {\n\t\t\tposition: absolute;\n\t\t\tleft: 0;\n\t\t\ttop: 0;\n\t\t\tbottom: 0;\n\t\t\tdisplay: flex;\n\t\t\talign-items: center;\n\t\t\tpadding: 0 16px;\n\t\t\tpointer-events: none;\n\t\t\tz-index: 2;\n\t\t\tsvg {\n\t\t\t\tdisplay: block;\n\t\t\t\twidth: 26px;\n\t\t\t\theight: 26px;\n\t\t\t}\n\t\t\t~ input {\n\t\t\t\tpadding-left: 50px;\n\t\t\t}\n\t\t}\n\t\tinput {\n\t\t\tposition: absolute;\n\t\t\ttop: 0;\n\t\t\tleft: 0;\n\t\t\tright: 0;\n\t\t\tbottom: 0;\n\t\t}\n\t}\n\tinput,\n\t.swift_input_text_input_search_selection_veneer {\n\t\tdisplay: block;\n\t\twidth: 100%;\n\t\toutline: none;\n\t\tpadding: 10px 16px 11px;\n\t\tcolor: inherit;\n\t\toverflow: hidden;\n\t\tfont-size: 16px;\n\t\tbackground:none;\n\t\tline-height: 29px;\n\t\ttransition: all 0.12s ease-out;\n\t}\n\n\t.swift_input_text_label, label {\n\t\tdisplay: none;\t\n\t}\n\t".concat(props.error ? "\n\t\tinput {\n    \t\tbackground: #fde0e0;\n    \t\tborder-color: #d44747;\n    \t}\n\t" : "", "\n\t") : props.theme == 'none' ? "\t\n\n\t\t.swift_input_text_input_element {\n\t\t\tposition:relative;\n\t\t\t.swift_input_text_input_icon {\n\t\t\t\tposition: absolute;\n\t\t\t\tleft: 0;\n\t\t\t\ttop: 0;\n\t\t\t\tbottom: 0;\n\t\t\t\tdisplay: flex;\n\t\t\t\talign-items: center;\n\t\t\t\tpadding: 0 16px;\n\t\t\t\tpointer-events: none;\n\t\t\t\tz-index: 2;\n\t\t\t\tsvg {\n\t\t\t\t\tdisplay: block;\n\t\t\t\t\twidth: 26px;\n\t\t\t\t\theight: 26px;\n\t\t\t\t}\n\t\t\t\t~ input {\n\t\t\t\t\tpadding-left: 50px;\n\t\t\t\t}\n\t\t\t}\n\t\t\tinput {\n\t\t\t\twidth:100%;\n\t\t\t\toutline:none;\n\t\t\t\tpadding:12px 18px;\n\t\t\t\tborder:1px solid #000;\n\t\t\t}\n\t\t}\n\t" : "";
});

exports.SwiftInputTextStyled = SwiftInputTextStyled;